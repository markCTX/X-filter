#!/bin/bash
### BEGIN INIT INFO
# Provides:          xfilter-FTL
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: xfilter-FTL daemon
# Description:       Enable service provided by xfilter-FTL daemon
### END INIT INFO

FTLUSER=xfilter
PIDFILE=/var/run/xfilter-FTL.pid

get_pid() {
    pidof "xfilter-FTL"
}

is_running() {
    ps "$(get_pid)" > /dev/null 2>&1
}


# Start the service
start() {
  if is_running; then
    echo "xfilter-FTL is already running"
  else
    # Touch files to ensure they exist (create if non-existing, preserve if existing)
    touch /var/log/xfilter-FTL.log /var/log/xfilter.log
    touch /run/xfilter-FTL.pid /run/xfilter-FTL.port
    touch /etc/xfilter/dhcp.leases
    mkdir -p /var/run/xfilter
    mkdir -p /var/log/xfilter
    chown xfilter:xfilter /var/run/xfilter /var/log/xfilter
    rm /var/run/xfilter/FTL.sock 2> /dev/null
    # Ensure that permissions are set so that xfilter-FTL can edit all necessary files
    chown xfilter:xfilter /run/xfilter-FTL.pid /run/xfilter-FTL.port
    chown xfilter:xfilter /etc/xfilter /etc/xfilter/dhcp.leases 2> /dev/null
    chown xfilter:xfilter /var/log/xfilter-FTL.log /var/log/xfilter.log
    chmod 0644 /var/log/xfilter-FTL.log /run/xfilter-FTL.pid /run/xfilter-FTL.port /var/log/xfilter.log
    echo "nameserver 127.0.0.1" | /sbin/resolvconf -a lo.xfilterFTL
    if setcap CAP_NET_BIND_SERVICE,CAP_NET_RAW,CAP_NET_ADMIN+eip "$(which xfilter-FTL)"; then
      su -s /bin/sh -c "/usr/bin/xfilter-FTL" "$FTLUSER"
    else
      echo "Warning: Starting xfilter-FTL as root because setting capabilities is not supported on this system"
      xfilter-FTL
    fi
    echo
  fi
}

# Stop the service
stop() {
  if is_running; then
    /sbin/resolvconf -d lo.xfilterFTL
    kill "$(get_pid)"
    for i in {1..5}; do
      if ! is_running; then
        break
      fi

      echo -n "."
      sleep 1
    done
    echo

    if is_running; then
      echo "Not stopped; may still be shutting down or shutdown may have failed, killing now"
      kill -9 "$(get_pid)"
      exit 1
    else
      echo "Stopped"
    fi
  else
    echo "Not running"
  fi
  echo
}

# Indicate the service status
status() {
  if is_running; then
    echo "[ ok ] xfilter-FTL is running"
    exit 0
  else
    echo "[    ] xfilter-FTL is not running"
    exit 1
  fi
}


### main logic ###
case "$1" in
  stop)
        stop
        ;;
  status)
        status
        ;;
  start|restart|reload|condrestart)
        stop
        start
        ;;
  *)
        echo $"Usage: $0 {start|stop|restart|reload|status}"
        exit 1
esac

exit 0
